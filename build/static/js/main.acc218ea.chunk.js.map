{"version":3,"sources":["components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","notcolor","className","style","color","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notificationMessage","setNotificationMessage","notificationColor","setNotificationColor","useEffect","personService","initialPersons","namesToShow","length","toLowerCase","includes","onChange","event","target","value","onSubmit","preventDefault","map","console","log","window","confirm","indexOf","changingNumber","find","n","changedNumber","returnedPerson","catch","error","setTimeout","concat","type","i","key","removePersonOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acc218ea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({person, removePerson}) => {\r\n  return (\r\n    <div>\r\n    {person.name} {person.number}\r\n    <button onClick={removePerson}>remove</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) =>{\r\n  const request = axios.delete(`${baseUrl}/${id}`) \r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update,\r\n  remove \r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message, notcolor}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"notification\" style={{color: notcolor}}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\nimport Person from './components/Person'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]) \r\n\r\n  const [newName, setNewName ] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n  const [notificationColor, setNotificationColor] = useState('')\r\n \r\n  let result = true\r\n  \r\n  useEffect(() => {\r\n    personService\r\n    .getAll()\r\n    .then(initialPersons => {        \r\n    setPersons(initialPersons)\r\n  })\r\n  }, [])\r\n\r\n  const removePersonOf = person => {\r\n    result = window.confirm(`Do you want to delete ${person.name}?`);\r\n\r\n    if(result === true){\r\n      personService\r\n      .remove(person.id)\r\n      .then(\r\n        setPersons(persons.filter(n => n.id !== person.id))  \r\n      )\r\n    }\r\n  }\r\n\r\n  \r\n  const handleNameChange = (event) => {       \r\n    setNewName(event.target.value)  \r\n  }\r\n  const handleNumberChange = (event) =>{    \r\n    setNewNumber(event.target.value) \r\n  }\r\n  const handleFilterChange = (event) =>{\r\n    setFilter(event.target.value.toLowerCase())\r\n  }\r\n\r\n  const addPerson = (event) =>{\r\n    event.preventDefault()\r\n\r\n    const person = persons.map(person => person.name) //names in own array\r\n    console.log(persons)\r\n    if(person.includes(newName)){\r\n      result = window.confirm(`${newName} is already added, want to replace number with new one?`)\r\n      if(result === true){\r\n        const idArray = persons.map(person => person.id) //id:s in own array\r\n\r\n        const index = person.indexOf(newName) //gets the index of array with new name\r\n\r\n        const id = idArray[index] // creates right id with the name index\r\n        console.log(id)\r\n\r\n        const changingNumber = persons.find(n => n.id === id)\r\n        const changedNumber = {...changingNumber, number: newNumber}\r\n        \r\n        personService\r\n        .update(id, changedNumber)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n        })\r\n        .catch(error =>{\r\n          setNotificationColor('red')\r\n          setNotificationMessage(\r\n            `${newName} is already removed`\r\n          )\r\n          \r\n          setTimeout(() => {          \r\n            setNotificationMessage(null)        \r\n          }, 2000)\r\n          \r\n        })\r\n\r\n      }\r\n    }\r\n    else{\r\n    const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n    }\r\n\r\n    personService\r\n    .create(personObject)\r\n    .then(returnedPerson => {\r\n      setPersons(persons.concat(returnedPerson))\r\n      setNewName('')\r\n      setNewNumber('')\r\n      setNotificationColor('green')\r\n    })\r\n    \r\n    setNotificationMessage(\r\n      `Added ${newName}`\r\n    )\r\n    setTimeout(() => {          \r\n      setNotificationMessage(null)        \r\n    }, 2000)\r\n    }\r\n  }\r\n\r\n  let namesToShow = []\r\n  if(filter.length === 0){\r\n      namesToShow = persons\r\n  }\r\n  else{\r\n      namesToShow = persons.filter(person => person.name.toLowerCase().includes(filter))\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} notcolor={notificationColor}  />\r\n      filter with: <input\r\n      onChange={handleFilterChange}/>\r\n      <form onSubmit={addPerson}>\r\n        <h2>Add new</h2>\r\n        <div>\r\n            name: <input \r\n            onChange={handleNameChange}/>\r\n        </div>\r\n        <div>\r\n            number: <input \r\n            onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      <h2>Numbers</h2>\r\n        {namesToShow.map((person, i) =>\r\n            <Person key={person.name} person={person}\r\n            removePerson={() => removePersonOf(person)}\r\n            />\r\n        )}\r\n        \r\n    </div>\r\n  )\r\n\r\n}\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}